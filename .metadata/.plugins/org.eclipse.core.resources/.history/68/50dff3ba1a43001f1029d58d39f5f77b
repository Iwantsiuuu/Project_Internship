/*
 * task_sensor.c
 *
 *  Created on: 16 Feb 2024
 *      Author: DwiSetyabudi
 *      Edited: Ridwan Bahari (21 Mei 2024)
 */

#include "task_sensor.h"
#include "main.h"

sensor_data dps_sensor;
sensor_data bmp280_sensor;
sensor_data bme680_sensor;

xensiv_dps3xx_t pressure_sensor;

void sensor_App(void *arg)
{

	while(!systemReady){
		vTaskDelay(5);
	}

	uint32_t time_update = 0;
	while(1)
	{
#ifdef USE_DUMMY_DATA
		dps_sensor.pressure = 1014.25;
		dps_sensor.temperature = 28;

		bmp280_sensor.pressure = 1014.25;
		bmp280_sensor.temperature = 28;

		bme680_sensor.pressure = 1014.25;
		bme680_sensor.temperature = 28;
		bme680_sensor.humidity = 60;
		bme680_sensor.gas = 50;
#endif

#ifdef USE_SENSOR
		if( xTaskGetTickCount() - time_update >= 1000)
		{
			if (semphr_i2c_dev != NULL){
				if(xSemaphoreTake(semphr_i2c_dev, ( TickType_t ) 100)){

#ifdef USE_DPS3xx
					xensiv_dps3xx_read(&pressure_sensor, &dps_sensor.pressure, &dps_sensor.temperature);
//					printf("press: %0.2f \t tempt: %0.0f C\r\n",dps_sensor.pressure, dps_sensor.temperature);
#endif

#ifdef USE_BMxx80
					BMP280_readValue(&bmp280_sensor.temperature, &bmp280_sensor.pressure, 100);
//					printf("press: %0.2f \t tempt: %0.0f C\r\n",dps_sensor.pressure, dps_sensor.temperature);
#endif
					xSemaphoreGive(semphr_i2c_dev);
					time_update = xTaskGetTickCount();
				}
			}

		}
#endif
		vTaskDelay(100);
	};
}

cy_rslt_t sensorInit(){
    cy_rslt_t result;
#ifdef USE_BMxx80
    result = bmp280.init(&i2c, BMP280_ADDR);
    return result;
#endif

#ifdef USE_DPS3xx
    result = xensiv_dps3xx_mtb_init_i2c(&pressure_sensor, &i2c, 0x77);
    return result;
#endif

#ifdef USE_DUMMY_DATA
   result = CY_RSLT_SUCCESS;
#endif

}
